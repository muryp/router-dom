---
import { ROUTER_RULE } from "../router";
import { generateStaticUrl, callbackReturn } from "../../src/routes";

export async function getStaticPaths() {
  const SSG = await generateStaticUrl(ROUTER_RULE);
  const LINK_FULL = [...SSG];
  const LINK = await generateStaticUrl(ROUTER_RULE, { NUM: 2 });
  SSG.push(ROUTER_RULE.NOT_FOUND);
  return SSG.map((CONTENT) => {
    const slug =
      CONTENT.url !== "/" ? CONTENT.url.replace(/^\//, "") : undefined;
    return {
      params: {
        slug,
      },
      props: { ...CONTENT, LINK_FULL, LINK },
    };
  });
}
interface AstroProps extends callbackReturn {
  LINK_FULL: callbackReturn[];
  LINK: callbackReturn[];
}
const { title, html } = Astro.props as AstroProps;

import Nav from "../component/nav";
import Footer from "../component/footer";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div id="nav" set:html={Nav} />
    <div id="root" set:html={html} />
    <div id="footer" set:html={Footer} />
    <script src="../script/domRoute.ts"></script>
  </body>
</html>
